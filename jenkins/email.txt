pipeline {
    agent any
    
    environment {
        REPO_URL = 'https://your-bitbucket-server.com/scm/yourproject/your-repo.git'
        CREDENTIALS_ID = 'your-credentials-id'
        JAVA_HOME = tool 'JDK_1.8' // Assuming JDK 1.8 is configured in Jenkins as a tool
        M2_HOME = tool 'Maven3' // Assuming Maven 3 is configured in Jenkins as a tool
        MAVEN_SETTINGS_FILE = credentials('your-maven-settings-config-id')
        PATH = "${env.JAVA_HOME}/bin:${env.M2_HOME}/bin:${env.PATH}"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: "*/${env.BRANCH_NAME}"]],
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [], 
                    submoduleCfg: [], 
                    userRemoteConfigs: [[
                        credentialsId: "${env.CREDENTIALS_ID}", 
                        url: "${env.REPO_URL}"
                    ]]
                ])
            }
        }

        stage('Build') {
            steps {
                script {
                    // Generate the current date and build ID
                    def currentDate = new Date().format('yyyyMMdd')
                    def buildId = env.BUILD_ID
                    
                    // Run Ant with specified ANT_OPTS
                    bat "${env.M2_HOME}/bin/mvn clean install -s ${env.MAVEN_SETTINGS_FILE} -DbuildDate=${currentDate} -DbuildId=${buildId}"
                }
            }
        }

        stage('Upload Artifact') {
            steps {
                script {
                    // Assuming your Maven project uses the 'deploy' goal to upload artifacts
                    bat "${env.M2_HOME}/bin/mvn deploy -s ${env.MAVEN_SETTINGS_FILE}"
                }
            }
        }
    }

    post {
        success {
            emailext (
                subject: "Build Successful: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build was successful. Check Jenkins for details.",
                to: 'your-success-email@example.com'
            )
        }
        failure {
            emailext (
                subject: "Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build failed. Check Jenkins for details.",
                to: 'your-failure-email@example.com'
            )
        }
    }
}
