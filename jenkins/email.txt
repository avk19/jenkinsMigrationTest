pipeline {
    agent any
    environment {
        REPO_URL = 'https://your-bitbucket-server.com/scm/yourproject/your-repo.git'
        CREDENTIALS_ID = 'your-credentials-id' // Your Git credentials ID
        MAVEN_SETTINGS_CREDENTIALS_ID = 'your-maven-settings-config-id' // Your Maven settings credentials ID
    }
    stages {
        stage('Checkout') {
            steps {
                checkout([
                    $class: 'GitSCM', 
                    branches: [[name: "*/${env.BRANCH_NAME}"]],
                    doGenerateSubmoduleConfigurations: false, 
                    extensions: [], 
                    submoduleCfg: [], 
                    userRemoteConfigs: [[
                        credentialsId: "${env.CREDENTIALS_ID}", 
                        url: "${env.REPO_URL}"
                    ]]
                ])
            }
        }
        stage('Build') {
            steps {
                withCredentials([string(credentialsId: "${env.MAVEN_SETTINGS_CREDENTIALS_ID}", variable: 'MAVEN_SETTINGS_FILE')]) {
                    script {
                        // Generate the current date and build ID
                        def currentDate = new Date().format('yyyyMMdd')
                        def buildId = env.BUILD_ID
                        // Run Maven with specified settings.xml
                        bat "mvn clean install -s %MAVEN_SETTINGS_FILE% -DbuildDate=${currentDate} -DbuildId=${buildId}"
                    }
                }
            }
        }
    }
    post {
        success {
            emailext (
                subject: 'Build Status: ${currentBuild.fullDisplayName}',
                body: '''<p>Build completed successfully. Check Jenkins for details.</p>''',
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'your_success_email@example.com' // Specify recipient email(s) for success
            )
        }
        failure {
            emailext (
                subject: 'Build Status: ${currentBuild.fullDisplayName}',
                body: '''<p>Build failed. Check Jenkins for details.</p>''',
                recipientProviders: [[$class: 'DevelopersRecipientProvider']],
                to: 'your_failure_email@example.com' // Specify recipient email(s) for failure
            )
        }
    }
}
